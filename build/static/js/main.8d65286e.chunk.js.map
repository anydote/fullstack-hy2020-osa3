{"version":3,"sources":["services/persons.js","components/Person.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","handlePersonClick","name","number","data-id","data-name","onClick","Persons","persons","filter","personRows","toLowerCase","includes","map","key","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Notification","message","content","console","log","className","Filter","handleFilterChange","App","useState","setPersons","setNewName","setNewNumber","setFilter","notification","setNotification","useEffect","personService","initialPersons","catch","error","names","p","event","target","preventDefault","personObject","window","confirm","personToChange","find","changedPerson","returnedPerson","setTimeout","copy","concat","idToRemove","dataset","nameToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d65286e.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React from 'react'\r\n\r\nconst Person = ({ person, handlePersonClick }) => {\r\n  return (\r\n    <div>\r\n      {person.name} {person.number}\r\n      <button\r\n        data-id={person.id}\r\n        data-name={person.name}\r\n        onClick={handlePersonClick}>\r\n        delete\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Persons = ({ persons, filter, handlePersonClick }) => {\r\n  const personsToShow = persons.filter(\r\n    person => person.name.toLowerCase().includes(filter.toLowerCase())\r\n  )\r\n\r\n  const personRows = personsToShow.map((person) => {\r\n    return (\r\n      <li key={person.id}>\r\n        <Person person={person} handlePersonClick={handlePersonClick}/>\r\n      </li>\r\n    )\r\n  })    \r\n\r\n  return (\r\n    <ul>\r\n      {personRows}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: \r\n        <input \r\n          value={newName} \r\n          onChange={handleNameChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        number: \r\n          <input \r\n            value={newNumber} \r\n            onChange={handleNumberChange}\r\n          />\r\n      </div>\r\n      <p><button type=\"submit\">add</button></p>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport { Persons, PersonForm }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message.content === null) {\r\n    return null\r\n  }\r\n\r\n  console.log(message)\r\n  return (\r\n    <div className={message.type}>\r\n      {message.content}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport { Persons, PersonForm } from './components/Person'\nimport Notification from './components/Notification'\n\nconst Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <>\n      <form>\n          filter shown with: \n          <input \n            value={filter} \n            onChange={handleFilterChange}\n          />\n      </form>\n    </>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState({\n    content: null, type: ''\n  })\n\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(initialPersons =>{\n          setPersons(initialPersons)\n        })\n        .catch(error => {\n          console.error(error)\n        })\n  }, [])\n\n  const names = persons.map(p => p.name)\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (names.includes(newName)) {\n      if (window.confirm(\n        `${newName} is already added to the phonebook.\n        Do you want to replace the old number with a new one?`\n      )) {\n        const personToChange = persons.find(p => p.name === newName)\n        const id = personToChange.id\n        const changedPerson = { ...personToChange, number: newNumber }\n\n        personService\n          .update(id, changedPerson)\n            .then(returnedPerson => {\n              setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n              setNewName('')\n              setNewNumber('')\n              setNotification({\n                content:`Updated ${newName}`,\n                type: 'success'\n              })\n              setTimeout(() => {\n                setNotification({content: null, type:''})\n              }, 2000)\n            })\n            .catch(error => {\n              let copy = persons.filter((person) => person.id !== id)\n              setPersons(copy)\n              setNotification({\n                content:`Information about ${newName} has already been deleted from the server`,\n                type: 'fail'\n              })\n              setTimeout(() => {\n                setNotification({content: null, type:''})\n              }, 2000)\n            })\n      }\n    } else {\n      personService\n        .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setNotification({\n              content:`Added ${newName}`,\n              type: 'success'\n            })\n            setTimeout(() => {\n              setNotification({content: null, type:''})\n            }, 2000)\n          })\n          .catch((error) => (console.log(error)))\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handlePersonClick = (event) => {\n    event.preventDefault()\n    const idToRemove = event.target.dataset.id\n    const nameToRemove = event.target.dataset.name\n    if (window.confirm(`Delete ${nameToRemove}?`)) {\n      let copy = persons.filter((person) => person.id !== idToRemove)\n      setPersons(copy)\n      setNewName('')\n      setNewNumber('')\n\n      personService\n        .remove(idToRemove)\n          .then(()  => {\n            setNotification({\n              content:`Deleted ${nameToRemove}`,\n              type: 'success'\n            })\n            setTimeout(() => {\n              setNotification({content: null, type:''})\n            }, 2000)\n          })\n          .catch(error => {\n            setNotification({\n              content:`The person ${nameToRemove} has already been deleted from the server`,\n              type: 'success'\n            })\n            setTimeout(() => {\n              setNotification({content: null, type:''})\n            }, 2000)\n          })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notification} />\n\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n\n      <h2>Add a new entry</h2>\n\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons \n        persons={persons} \n        filter={filter} \n        handlePersonClick={handlePersonClick} \n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}